services:
  medical-record-system:
    image: medical-record-system
    ports:
      - "8420:8080"
    build:
      context: .
      dockerfile: Medical-Record-System/Dockerfile
    networks:
      - medical-record-system
    depends_on:
      - rabbitmq

  medical-record-event-store:
    image: postgres:16-alpine
    ports:
      - "5420:5432"
    volumes:
      - ~/apps/postgres/medical:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=medical-record-event-store
    networks:
      - medical-record-system
        
  user-management:
    image: user-management
    ports:
      - "8421:8080"
    build:
      context: .
      dockerfile: User-Management/Dockerfile
    networks:
      - user-management
  
  user-management-db:
    image: postgres:16-alpine
    ports:
      - "5421:5432"
    volumes:
      - ~/apps/postgres/user:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=user-management-db
    networks:
      - user-management
  
  patientmanagement:
    image: patientmanagement
    build:
      context: .
      dockerfile: PatientManagement/Dockerfile
    networks:
      - medical-record-system
    depends_on:
      - rabbitmq
        
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ main port
      - "15672:15672" # RabbitMQ management UI
    networks:
      - medical-record-system

networks:
  medical-record-system:
    driver: bridge
  user-management:
    driver: bridge
 
